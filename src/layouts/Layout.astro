---
// Supports weights 100-900
import "@fontsource-variable/onest";
import Header from "../components/Header.astro";
import { ViewTransitions } from "astro:transitions";
import App from "../components/pages/App.astro";
import { getLangFromUrl } from "@/i18n/utils";

interface Props {
  description: string;
  title: string;
}

const { description, title } = Astro.props;
const lang = getLangFromUrl(Astro.url);
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/steam-icon.svg" />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body>
    <Header />
    <slot />
    <style is:global>
      :root {
        color-scheme: dark;
        --entry-animation: -20px;
        --cover-animation: 20px;
      }

      @media (min-width: 1400px) {
        :root {
          --entry-animation: -100px;
          --cover-animation: 100px;
        }
      }

      @font-face {
        font-family: "Tomaso";
        font-style: normal;
        font-weight: normal;
        font-display: swap;
        src: url("/fonts/tomaso.woff2") format("woff2");
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6,
          U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC,
          U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }

      html {
        font-family: "Onest Variable", system-ui, sans-serif;
        background: rgb(20, 34, 48);
        background: linear-gradient(
          183deg,
          rgba(20, 34, 48, 1) 0%,
          rgba(20, 52, 75, 1) 100%
        );
      }

      ::-webkit-scrollbar {
        width: 8px;
      }
      ::-webkit-scrollbar-track {
        background: transparent;
        backdrop-filter: blur(10px);
        border-radius: 5px;
      }
      ::-webkit-scrollbar-thumb {
        background: rgba(255, 255, 255, 0.3);
        backdrop-filter: blur(10px);
        border-radius: 5px;
      }
      ::-webkit-scrollbar-thumb:hover {
        background: rgba(255, 255, 255, 0.5);
      }

      p {
        color: rgba(255, 255, 255, 0.9);
        line-height: 1.4;
        margin-bottom: 1em;
        font-weight: 100;
        font-size: 1em;
        letter-spacing: 0.5px;
      }

      p strong {
        color: white;
        font-weight: 700;
      }

      .text__glowing {
        transition: text-shadow 0.3s ease;
      }

      .text__glowing:hover {
        text-shadow:
          0 0 10px rgba(255, 255, 255, 0.8),
          0 0 20px rgba(255, 255, 255, 0.8),
          0 0 40px rgba(255, 255, 255, 0.8),
          0 0 80px rgba(255, 255, 255, 0.8),
          0 0 120px rgba(255, 255, 255, 0.8);
      }
      .text__glowing__medium {
        transition: text-shadow 0.3s ease;
      }

      .text__glowing__medium:hover {
        text-shadow:
          0 0 5px rgba(255, 255, 255, 0.4),
          0 0 10px rgba(255, 255, 255, 0.4),
          0 0 20px rgba(255, 255, 255, 0.4),
          0 0 40px rgba(255, 255, 255, 0.4),
          0 0 60px rgba(255, 255, 255, 0.4);
      }

      .text__glowing__min {
        transition: text-shadow 0.3s ease;
      }

      .text__glowing__min:hover {
        text-shadow:
          0 0 2px rgba(102, 192, 244, 0.2),
          0 0 4px rgba(102, 192, 244, 0.2),
          0 0 8px rgba(102, 192, 244, 0.2),
          0 0 16px rgba(102, 192, 244, 0.2),
          0 0 24px rgba(102, 192, 244, 0.2);
      }

      #header-nav {
        animation: blur linear both;
        animation-timeline: scroll();
        animation-range: 0 500px;
      }

      @keyframes blur {
        to {
          box-shadow:
            0px 5px 50px -5px rgba(0, 0, 0, 0.1),
            0px 0px 0 1px rgba(0, 0, 0, 0.3);
          background: rgba(0, 0, 0, 0.3);
          backdrop-filter: blur(10px);
          mask-image: linear-gradient(
            rgb(0, 0, 0) 50%,
            rgba(0, 0, 0, 0.8) 70%,
            rgba(0, 0, 0, 0) 100%
          );
          -webkit-mask-image: linear-gradient(
            rgb(0, 0, 0) 50%,
            rgba(0, 0, 0, 0.8) 70%,
            rgba(0, 0, 0, 0) 100%
          );
        }
      }
    </style>
  </body>
</html>
